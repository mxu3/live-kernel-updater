{
  "name": "live-kernel-updater",
  "tagline": "change the kernel on the running MX live-USB or antiX distro  -- plus a great MX wiki",
  "body": "## feel free to edit the MX distro freedom wiki at   \r\n### https://github.com/mxu3/live-kernel-updater/wiki  \r\n\r\n***\r\n\r\n\r\n# live-kernel-updater\r\ntest status : one successful kernel change performed on updated MX-15, running latest liquorix kernel, which is a nice kernel here!\r\n\r\nThis is a bash command line program that changes or updates the kernel on a antiX or MX\r\nlive-usb. It can work on a running live-usb (primary) or on a secondary live-usb that is plugged in.\r\n\r\n### Quick Start\r\n    from  https://mxu3.github.io/live-kernel-updater  download the master.zip with firefox, or:\r\n\r\n    sudo apt-get update       # if needed\r\n    sudo apt-get install git  # if needed\r\n    git clone https://github.com/BitJam/live-kernel-updater\r\n    git clone https://github.com/BitJam/cli-shell-utils       ##  contains library bash code\r\n    cd live-kernel-updater\r\n    sudo ./live-kernel-updater\r\n\r\n## Synopsis\r\n\r\n\r\nThis program is command line only for the time being.  We try to avoid making your\r\nlive-usb unbootable so you need to install a new kernel and then do a\r\nremaster before we will attempt to update the live kernel, i.e. deal with initrd asf..  \r\nWe do this by always looking for new kernels inside of the linuxfs file (in /boot) so we\r\nknow it will be available upon next boot.\r\n\r\nIt can update a running live system or a live-usb that you plugged in, e.g. on a SD-card.\r\nYou will be prompted with choices if you do not already specify what you want to do via command line options.\r\n\r\nThe log file is at `/var/log/live-kernel-updater.log` \r\n\r\nIt will automatically create a config file for itself at\r\n`/root/.config/live-kernel-updater/live-kernel-updater.conf`\r\n\r\n\r\n## Usage\r\n\r\n```\r\nUsage: live-kernel-updater [options] [command]\r\n\r\nUpdate the kernel on a running antiX or MX live-usb or on an antiX or MX live-usb\r\nthat is plugged into another system, like on a secondary USB-thumbdrive.  \r\nThe new kernel files must already be installed, i.e. present on the SD-card.\r\nYou will be prompted for necessary information missing from command line arguments.\r\n\r\nCommands:\r\n   all         All of the commands below\r\n   unpack      Unpack the old initrd\r\n   copy        Copy kernel modules into initrd\r\n   repack      Repack the new initrd\r\n   install     Copy new initrd and vmlinuz to the live boot directory\r\n\r\nOptions:\r\n  -a --auto             Non-interactive mode, this will always preset the safest option\r\n     --color=<xxx>      Set color scheme to off|low|high\r\n  -D --debug            Pause before cleaning up\r\n  -d --device=<device>  live-usb device to update the kernel on\r\n                        (use \"live\" to force updating a running live system)\r\n  -F --force=XXXX       Force the options specfied:\r\n                             flock:  ignore missing flock program (flock - manage locks from shell scripts)\r\n                               usb:  Allow non-usb devices as target drive (dangerous!)\r\n                             clear:  remove previous initrd directory\r\n  -h --help -?          Show this usage info\r\n  -i --initrd=<name>    Name of initrd file (initrd.gz).  If the name has\r\n                        leading / then treated as full path to alternate initrd\r\n  -I --ignore-config    Ignore the configuration file\r\n  -k --kernel=<kernel>  The version (uname -r) of the new kernel\r\n  -K --keep-old         Keep the old module directory in the initrd\r\n  -p --pretend          Do not actually install the new kernel or initrd.gz (dry run for testing the script)\r\n     --pause=<list>     Pause after certain stages of processing:\r\n                            mount\r\n                            unpack\r\n                            copy\r\n                            repack\r\n                            install\r\n\r\n  -q --quiet            Print less info\r\n  -R --reset-config     Write fresh config file with default options\r\n  -v --verbose          Print more info, show commands when run\r\n  -W --write-config     Write/update config file preserving current options\r\n\r\nNotes:\r\n  - short options stack. Example: -pq instead of --pretend --quiet\r\n  - options can be intermingled with commands and parameters\r\n  \r\n  - config file: /root/.config/live-kernel-updater/live-kernel-updater.conf\r\n  - the config file will be sourced if it exists\r\n  - it will be created if it does not exist\r\n```\r\n\r\n###notes from the original release thread\r\nhttp://forum.mepiscommunity.org/viewtopic.php?f=77&t=40423#p390788\r\n\r\nIf you have previously tested this program then please add the -R (--reset-config) command line option the first time you run this new version. That will cause it to create a new default config file.\r\n\r\nNotes:\r\n\r\n    You must first install a new kernel and then do a live-remaster or this program will refuse to run\r\n    \r\n    It should work on frugal systems now\r\n    I plan to release a similar program, live-usb-maker, soon\r\n    I *think* the program is operating correctly\r\n    I'm interested in feedback about the UI (user interface)\r\n    I'm interested in feedback about the help/man page\r\n    I plan to make the beta release after we have it all packaged in .deb files\r\n    \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}